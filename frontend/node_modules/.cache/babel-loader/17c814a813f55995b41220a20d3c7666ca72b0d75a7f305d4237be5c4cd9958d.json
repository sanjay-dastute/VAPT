{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/VAPT/frontend/src/components/scanners/MobileScanner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FormControl, FormLabel, Input, Button, VStack, Select, Checkbox, useToast, HStack } from '@chakra-ui/react';\nimport ScannerLayout from '../common/ScannerLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MobileScanner = () => {\n  _s();\n  const [appFile, setAppFile] = useState(null);\n  const [platform, setPlatform] = useState('android');\n  const [deepScan, setDeepScan] = useState(false);\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setAppFile(e.target.files[0]);\n    }\n  };\n  const handleScan = async () => {\n    if (!appFile) {\n      toast({\n        title: 'Error',\n        description: 'Please select an application file',\n        status: 'error',\n        duration: 3000\n      });\n      return;\n    }\n    setIsScanning(true);\n    const formData = new FormData();\n    formData.append('file', appFile);\n    formData.append('platform', platform);\n    formData.append('deepScan', String(deepScan));\n    try {\n      const response = await fetch('http://localhost:8000/scan/mobile', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) throw new Error('Scan failed');\n      toast({\n        title: 'Success',\n        description: 'Mobile app scan started successfully',\n        status: 'success',\n        duration: 3000\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to start mobile app scan',\n        status: 'error',\n        duration: 3000\n      });\n    }\n    setIsScanning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ScannerLayout, {\n    title: \"Mobile Application Scanner\",\n    description: \"Scan mobile applications (Android APK/iOS IPA) for security vulnerabilities\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Upload Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          accept: \".apk,.ipa\",\n          onChange: handleFileChange,\n          p: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: platform,\n          onChange: e => setPlatform(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"android\",\n            children: \"Android\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ios\",\n            children: \"iOS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          isChecked: deepScan,\n          onChange: e => setDeepScan(e.target.checked),\n          children: \"Enable Deep Scan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: handleScan,\n        isLoading: isScanning,\n        loadingText: \"Scanning\",\n        w: \"100%\",\n        children: \"Start Mobile App Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(MobileScanner, \"j0joBe7MZUyVRNeryryp8qQhHIM=\", false, function () {\n  return [useToast];\n});\n_c = MobileScanner;\nexport default MobileScanner;\nvar _c;\n$RefreshReg$(_c, \"MobileScanner\");","map":{"version":3,"names":["React","useState","FormControl","FormLabel","Input","Button","VStack","Select","Checkbox","useToast","HStack","ScannerLayout","jsxDEV","_jsxDEV","MobileScanner","_s","appFile","setAppFile","platform","setPlatform","deepScan","setDeepScan","isScanning","setIsScanning","toast","handleFileChange","e","target","files","handleScan","title","description","status","duration","formData","FormData","append","String","response","fetch","method","body","ok","Error","error","children","spacing","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","p","value","isChecked","checked","colorScheme","onClick","isLoading","loadingText","w","_c","$RefreshReg$"],"sources":["/home/ubuntu/VAPT/frontend/src/components/scanners/MobileScanner.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  VStack,\n  Select,\n  Checkbox,\n  useToast,\n  HStack,\n} from '@chakra-ui/react';\nimport ScannerLayout from '../common/ScannerLayout';\n\nconst MobileScanner: React.FC = () => {\n  const [appFile, setAppFile] = useState<File | null>(null);\n  const [platform, setPlatform] = useState('android');\n  const [deepScan, setDeepScan] = useState(false);\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setAppFile(e.target.files[0]);\n    }\n  };\n\n  const handleScan = async () => {\n    if (!appFile) {\n      toast({\n        title: 'Error',\n        description: 'Please select an application file',\n        status: 'error',\n        duration: 3000,\n      });\n      return;\n    }\n\n    setIsScanning(true);\n    const formData = new FormData();\n    formData.append('file', appFile);\n    formData.append('platform', platform);\n    formData.append('deepScan', String(deepScan));\n\n    try {\n      const response = await fetch('http://localhost:8000/scan/mobile', {\n        method: 'POST',\n        body: formData,\n      });\n      if (!response.ok) throw new Error('Scan failed');\n      toast({\n        title: 'Success',\n        description: 'Mobile app scan started successfully',\n        status: 'success',\n        duration: 3000,\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to start mobile app scan',\n        status: 'error',\n        duration: 3000,\n      });\n    }\n    setIsScanning(false);\n  };\n\n  return (\n    <ScannerLayout\n      title=\"Mobile Application Scanner\"\n      description=\"Scan mobile applications (Android APK/iOS IPA) for security vulnerabilities\"\n    >\n      <VStack spacing={6}>\n        <FormControl>\n          <FormLabel>Upload Application</FormLabel>\n          <Input\n            type=\"file\"\n            accept=\".apk,.ipa\"\n            onChange={handleFileChange}\n            p={1}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel>Platform</FormLabel>\n          <Select value={platform} onChange={(e) => setPlatform(e.target.value)}>\n            <option value=\"android\">Android</option>\n            <option value=\"ios\">iOS</option>\n          </Select>\n        </FormControl>\n        <HStack>\n          <Checkbox\n            isChecked={deepScan}\n            onChange={(e) => setDeepScan(e.target.checked)}\n          >\n            Enable Deep Scan\n          </Checkbox>\n        </HStack>\n        <Button\n          colorScheme=\"blue\"\n          onClick={handleScan}\n          isLoading={isScanning}\n          loadingText=\"Scanning\"\n          w=\"100%\"\n        >\n          Start Mobile App Scan\n        </Button>\n      </VStack>\n    </ScannerLayout>\n  );\n};\n\nexport default MobileScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,WAAW,EACXC,SAAS,EACTC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,QAAQ,EACRC,QAAQ,EACRC,MAAM,QACD,kBAAkB;AACzB,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAc,IAAI,CAAC;EACzD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMuB,KAAK,GAAGf,QAAQ,CAAC,CAAC;EAExB,MAAMgB,gBAAgB,GAAIC,CAAsC,IAAK;IACnE,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MACvCX,UAAU,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACb,OAAO,EAAE;MACZQ,KAAK,CAAC;QACJM,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,mCAAmC;QAChDC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACF;IACF;IAEAV,aAAa,CAAC,IAAI,CAAC;IACnB,MAAMW,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEpB,OAAO,CAAC;IAChCkB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAElB,QAAQ,CAAC;IACrCgB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEC,MAAM,CAACjB,QAAQ,CAAC,CAAC;IAE7C,IAAI;MACF,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP;MACR,CAAC,CAAC;MACF,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,aAAa,CAAC;MAChDnB,KAAK,CAAC;QACJM,KAAK,EAAE,SAAS;QAChBC,WAAW,EAAE,sCAAsC;QACnDC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdpB,KAAK,CAAC;QACJM,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,iCAAiC;QAC9CC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IACAV,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEV,OAAA,CAACF,aAAa;IACZmB,KAAK,EAAC,4BAA4B;IAClCC,WAAW,EAAC,6EAA6E;IAAAc,QAAA,eAEzFhC,OAAA,CAACP,MAAM;MAACwC,OAAO,EAAE,CAAE;MAAAD,QAAA,gBACjBhC,OAAA,CAACX,WAAW;QAAA2C,QAAA,gBACVhC,OAAA,CAACV,SAAS;UAAA0C,QAAA,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACzCrC,OAAA,CAACT,KAAK;UACJ+C,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,WAAW;UAClBC,QAAQ,EAAE5B,gBAAiB;UAC3B6B,CAAC,EAAE;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eACdrC,OAAA,CAACX,WAAW;QAAA2C,QAAA,gBACVhC,OAAA,CAACV,SAAS;UAAA0C,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAC/BrC,OAAA,CAACN,MAAM;UAACgD,KAAK,EAAErC,QAAS;UAACmC,QAAQ,EAAG3B,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACC,MAAM,CAAC4B,KAAK,CAAE;UAAAV,QAAA,gBACpEhC,OAAA;YAAQ0C,KAAK,EAAC,SAAS;YAAAV,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxCrC,OAAA;YAAQ0C,KAAK,EAAC,KAAK;YAAAV,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACdrC,OAAA,CAACH,MAAM;QAAAmC,QAAA,eACLhC,OAAA,CAACL,QAAQ;UACPgD,SAAS,EAAEpC,QAAS;UACpBiC,QAAQ,EAAG3B,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACC,MAAM,CAAC8B,OAAO,CAAE;UAAAZ,QAAA,EAChD;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACTrC,OAAA,CAACR,MAAM;QACLqD,WAAW,EAAC,MAAM;QAClBC,OAAO,EAAE9B,UAAW;QACpB+B,SAAS,EAAEtC,UAAW;QACtBuC,WAAW,EAAC,UAAU;QACtBC,CAAC,EAAC,MAAM;QAAAjB,QAAA,EACT;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB,CAAC;AAACnC,EAAA,CA/FID,aAAuB;EAAA,QAKbL,QAAQ;AAAA;AAAAsD,EAAA,GALlBjD,aAAuB;AAiG7B,eAAeA,aAAa;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}