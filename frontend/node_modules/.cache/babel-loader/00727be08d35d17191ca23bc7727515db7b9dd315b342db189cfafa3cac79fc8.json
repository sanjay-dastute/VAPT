{"ast":null,"code":"import React,{useState}from'react';import{FormControl,FormLabel,Input,Button,VStack,useToast}from'@chakra-ui/react';import ScannerLayout from'../common/ScannerLayout';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WebScanner=()=>{const[target,setTarget]=useState('');const[isScanning,setIsScanning]=useState(false);const toast=useToast();const handleScan=async()=>{if(!target){toast({title:'Error',description:'Please enter a target URL',status:'error',duration:3000});return;}setIsScanning(true);try{const response=await fetch('http://localhost:8000/scan/web',{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify({target,options:{}})});if(!response.ok)throw new Error('Scan failed');toast({title:'Success',description:'Scan started successfully',status:'success',duration:3000});}catch(error){toast({title:'Error',description:'Failed to start scan',status:'error',duration:3000});}setIsScanning(false);};return/*#__PURE__*/_jsx(ScannerLayout,{title:\"Web Vulnerability Scanner\",description:\"Scan web applications for security vulnerabilities using AI-powered detection\",children:/*#__PURE__*/_jsxs(VStack,{spacing:6,children:[/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Target URL\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"https://example.com\",value:target,onChange:e=>setTarget(e.target.value)})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleScan,isLoading:isScanning,loadingText:\"Scanning\",w:\"100%\",children:\"Start Scan\"})]})});};export default WebScanner;","map":{"version":3,"names":["React","useState","FormControl","FormLabel","Input","Button","VStack","useToast","ScannerLayout","jsx","_jsx","jsxs","_jsxs","WebScanner","target","setTarget","isScanning","setIsScanning","toast","handleScan","title","description","status","duration","response","fetch","method","headers","credentials","body","JSON","stringify","options","ok","Error","error","children","spacing","placeholder","value","onChange","e","colorScheme","onClick","isLoading","loadingText","w"],"sources":["/home/ubuntu/VAPT/frontend/src/components/scanners/WebScanner.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  VStack,\n  HStack,\n  Checkbox,\n  useToast,\n  Progress,\n  Text,\n} from '@chakra-ui/react';\nimport ScannerLayout from '../common/ScannerLayout';\n\nconst WebScanner: React.FC = () => {\n  const [target, setTarget] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n\n  const handleScan = async () => {\n    if (!target) {\n      toast({\n        title: 'Error',\n        description: 'Please enter a target URL',\n        status: 'error',\n        duration: 3000,\n      });\n      return;\n    }\n\n    setIsScanning(true);\n    try {\n      const response = await fetch('http://localhost:8000/scan/web', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        credentials: 'include',\n        body: JSON.stringify({ target, options: {} }),\n      });\n      if (!response.ok) throw new Error('Scan failed');\n      toast({\n        title: 'Success',\n        description: 'Scan started successfully',\n        status: 'success',\n        duration: 3000,\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to start scan',\n        status: 'error',\n        duration: 3000,\n      });\n    }\n    setIsScanning(false);\n  };\n\n  return (\n    <ScannerLayout\n      title=\"Web Vulnerability Scanner\"\n      description=\"Scan web applications for security vulnerabilities using AI-powered detection\"\n    >\n      <VStack spacing={6}>\n        <FormControl>\n          <FormLabel>Target URL</FormLabel>\n          <Input\n            placeholder=\"https://example.com\"\n            value={target}\n            onChange={(e) => setTarget(e.target.value)}\n          />\n        </FormControl>\n        <Button\n          colorScheme=\"blue\"\n          onClick={handleScan}\n          isLoading={isScanning}\n          loadingText=\"Scanning\"\n          w=\"100%\"\n        >\n          Start Scan\n        </Button>\n      </VStack>\n    </ScannerLayout>\n  );\n};\n\nexport default WebScanner;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OACEC,WAAW,CACXC,SAAS,CACTC,KAAK,CACLC,MAAM,CACNC,MAAM,CAGNC,QAAQ,KAGH,kBAAkB,CACzB,MAAO,CAAAC,aAAa,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,KAAM,CAAAC,UAAoB,CAAGA,CAAA,GAAM,CACjC,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAAiB,KAAK,CAAGX,QAAQ,CAAC,CAAC,CAExB,KAAM,CAAAY,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CAACL,MAAM,CAAE,CACXI,KAAK,CAAC,CACJE,KAAK,CAAE,OAAO,CACdC,WAAW,CAAE,2BAA2B,CACxCC,MAAM,CAAE,OAAO,CACfC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACF,OACF,CAEAN,aAAa,CAAC,IAAI,CAAC,CACnB,GAAI,CACF,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gCAAgC,CAAE,CAC7DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,WAAW,CAAE,SAAS,CACtBC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEjB,MAAM,CAAEkB,OAAO,CAAE,CAAC,CAAE,CAAC,CAC9C,CAAC,CAAC,CACF,GAAI,CAACR,QAAQ,CAACS,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,aAAa,CAAC,CAChDhB,KAAK,CAAC,CACJE,KAAK,CAAE,SAAS,CAChBC,WAAW,CAAE,2BAA2B,CACxCC,MAAM,CAAE,SAAS,CACjBC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CAAE,MAAOY,KAAK,CAAE,CACdjB,KAAK,CAAC,CACJE,KAAK,CAAE,OAAO,CACdC,WAAW,CAAE,sBAAsB,CACnCC,MAAM,CAAE,OAAO,CACfC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CACAN,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAED,mBACEP,IAAA,CAACF,aAAa,EACZY,KAAK,CAAC,2BAA2B,CACjCC,WAAW,CAAC,+EAA+E,CAAAe,QAAA,cAE3FxB,KAAA,CAACN,MAAM,EAAC+B,OAAO,CAAE,CAAE,CAAAD,QAAA,eACjBxB,KAAA,CAACV,WAAW,EAAAkC,QAAA,eACV1B,IAAA,CAACP,SAAS,EAAAiC,QAAA,CAAC,YAAU,CAAW,CAAC,cACjC1B,IAAA,CAACN,KAAK,EACJkC,WAAW,CAAC,qBAAqB,CACjCC,KAAK,CAAEzB,MAAO,CACd0B,QAAQ,CAAGC,CAAC,EAAK1B,SAAS,CAAC0B,CAAC,CAAC3B,MAAM,CAACyB,KAAK,CAAE,CAC5C,CAAC,EACS,CAAC,cACd7B,IAAA,CAACL,MAAM,EACLqC,WAAW,CAAC,MAAM,CAClBC,OAAO,CAAExB,UAAW,CACpByB,SAAS,CAAE5B,UAAW,CACtB6B,WAAW,CAAC,UAAU,CACtBC,CAAC,CAAC,MAAM,CAAAV,QAAA,CACT,YAED,CAAQ,CAAC,EACH,CAAC,CACI,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAvB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}