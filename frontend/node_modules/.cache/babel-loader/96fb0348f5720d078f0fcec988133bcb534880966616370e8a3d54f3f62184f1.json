{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/VAPT/frontend/src/components/scanners/SourceCodeScanner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FormControl, FormLabel, Input, Button, VStack, Select, Checkbox, useToast, Text, Box } from '@chakra-ui/react';\nimport ScannerLayout from '../common/ScannerLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SourceCodeScanner = () => {\n  _s();\n  const [repository, setRepository] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [scanSecrets, setScanSecrets] = useState(true);\n  const [scanVulnerabilities, setScanVulnerabilities] = useState(true);\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n  const handleScan = async () => {\n    if (!repository) {\n      toast({\n        title: 'Error',\n        description: 'Please enter a repository URL',\n        status: 'error',\n        duration: 3000\n      });\n      return;\n    }\n    setIsScanning(true);\n    try {\n      const response = await fetch('http://localhost:8000/scan/source', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          repository,\n          language,\n          scan_secrets: scanSecrets,\n          scan_vulnerabilities: scanVulnerabilities\n        })\n      });\n      if (!response.ok) throw new Error('Scan failed');\n      toast({\n        title: 'Success',\n        description: 'Source code scan started successfully',\n        status: 'success',\n        duration: 3000\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to start source code scan',\n        status: 'error',\n        duration: 3000\n      });\n    }\n    setIsScanning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ScannerLayout, {\n    title: \"Source Code Scanner\",\n    description: \"Analyze source code for security vulnerabilities, secrets, and best practices\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Repository URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"https://github.com/username/repo\",\n          value: repository,\n          onChange: e => setRepository(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Primary Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"python\",\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"javascript\",\n            children: \"JavaScript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"java\",\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"go\",\n            children: \"Go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ruby\",\n            children: \"Ruby\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"php\",\n            children: \"PHP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          mb: 2,\n          fontWeight: \"medium\",\n          children: \"Scan Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          align: \"start\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            isChecked: scanSecrets,\n            onChange: e => setScanSecrets(e.target.checked),\n            children: \"Scan for Hardcoded Secrets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            isChecked: scanVulnerabilities,\n            onChange: e => setScanVulnerabilities(e.target.checked),\n            children: \"Scan for Security Vulnerabilities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: handleScan,\n        isLoading: isScanning,\n        loadingText: \"Scanning\",\n        w: \"100%\",\n        children: \"Start Source Code Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(SourceCodeScanner, \"ZrystLfzq/D3fzauU3APjUQ5sWE=\", false, function () {\n  return [useToast];\n});\n_c = SourceCodeScanner;\nexport default SourceCodeScanner;\nvar _c;\n$RefreshReg$(_c, \"SourceCodeScanner\");","map":{"version":3,"names":["React","useState","FormControl","FormLabel","Input","Button","VStack","Select","Checkbox","useToast","Text","Box","ScannerLayout","jsxDEV","_jsxDEV","SourceCodeScanner","_s","repository","setRepository","language","setLanguage","scanSecrets","setScanSecrets","scanVulnerabilities","setScanVulnerabilities","isScanning","setIsScanning","toast","handleScan","title","description","status","duration","response","fetch","method","headers","body","JSON","stringify","scan_secrets","scan_vulnerabilities","ok","Error","error","children","spacing","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","w","mb","fontWeight","align","isChecked","checked","colorScheme","onClick","isLoading","loadingText","_c","$RefreshReg$"],"sources":["/home/ubuntu/VAPT/frontend/src/components/scanners/SourceCodeScanner.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  VStack,\n  Select,\n  Checkbox,\n  useToast,\n  HStack,\n  Text,\n  Box,\n} from '@chakra-ui/react';\nimport ScannerLayout from '../common/ScannerLayout';\n\nconst SourceCodeScanner: React.FC = () => {\n  const [repository, setRepository] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [scanSecrets, setScanSecrets] = useState(true);\n  const [scanVulnerabilities, setScanVulnerabilities] = useState(true);\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n\n  const handleScan = async () => {\n    if (!repository) {\n      toast({\n        title: 'Error',\n        description: 'Please enter a repository URL',\n        status: 'error',\n        duration: 3000,\n      });\n      return;\n    }\n\n    setIsScanning(true);\n    try {\n      const response = await fetch('http://localhost:8000/scan/source', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          repository,\n          language,\n          scan_secrets: scanSecrets,\n          scan_vulnerabilities: scanVulnerabilities,\n        }),\n      });\n      if (!response.ok) throw new Error('Scan failed');\n      toast({\n        title: 'Success',\n        description: 'Source code scan started successfully',\n        status: 'success',\n        duration: 3000,\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to start source code scan',\n        status: 'error',\n        duration: 3000,\n      });\n    }\n    setIsScanning(false);\n  };\n\n  return (\n    <ScannerLayout\n      title=\"Source Code Scanner\"\n      description=\"Analyze source code for security vulnerabilities, secrets, and best practices\"\n    >\n      <VStack spacing={6}>\n        <FormControl>\n          <FormLabel>Repository URL</FormLabel>\n          <Input\n            placeholder=\"https://github.com/username/repo\"\n            value={repository}\n            onChange={(e) => setRepository(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel>Primary Language</FormLabel>\n          <Select value={language} onChange={(e) => setLanguage(e.target.value)}>\n            <option value=\"python\">Python</option>\n            <option value=\"javascript\">JavaScript</option>\n            <option value=\"java\">Java</option>\n            <option value=\"go\">Go</option>\n            <option value=\"ruby\">Ruby</option>\n            <option value=\"php\">PHP</option>\n          </Select>\n        </FormControl>\n        <Box w=\"100%\">\n          <Text mb={2} fontWeight=\"medium\">Scan Options</Text>\n          <VStack align=\"start\" spacing={2}>\n            <Checkbox\n              isChecked={scanSecrets}\n              onChange={(e) => setScanSecrets(e.target.checked)}\n            >\n              Scan for Hardcoded Secrets\n            </Checkbox>\n            <Checkbox\n              isChecked={scanVulnerabilities}\n              onChange={(e) => setScanVulnerabilities(e.target.checked)}\n            >\n              Scan for Security Vulnerabilities\n            </Checkbox>\n          </VStack>\n        </Box>\n        <Button\n          colorScheme=\"blue\"\n          onClick={handleScan}\n          isLoading={isScanning}\n          loadingText=\"Scanning\"\n          w=\"100%\"\n        >\n          Start Source Code Scan\n        </Button>\n      </VStack>\n    </ScannerLayout>\n  );\n};\n\nexport default SourceCodeScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,WAAW,EACXC,SAAS,EACTC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,QAAQ,EACRC,QAAQ,EAERC,IAAI,EACJC,GAAG,QACE,kBAAkB;AACzB,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,QAAQ,CAAC;EAClD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACsB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM0B,KAAK,GAAGlB,QAAQ,CAAC,CAAC;EAExB,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACX,UAAU,EAAE;MACfU,KAAK,CAAC;QACJE,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,+BAA+B;QAC5CC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACF;IACF;IAEAN,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBtB,UAAU;UACVE,QAAQ;UACRqB,YAAY,EAAEnB,WAAW;UACzBoB,oBAAoB,EAAElB;QACxB,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACU,QAAQ,CAACS,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,aAAa,CAAC;MAChDhB,KAAK,CAAC;QACJE,KAAK,EAAE,SAAS;QAChBC,WAAW,EAAE,uCAAuC;QACpDC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdjB,KAAK,CAAC;QACJE,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,kCAAkC;QAC/CC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IACAN,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEZ,OAAA,CAACF,aAAa;IACZiB,KAAK,EAAC,qBAAqB;IAC3BC,WAAW,EAAC,+EAA+E;IAAAe,QAAA,eAE3F/B,OAAA,CAACR,MAAM;MAACwC,OAAO,EAAE,CAAE;MAAAD,QAAA,gBACjB/B,OAAA,CAACZ,WAAW;QAAA2C,QAAA,gBACV/B,OAAA,CAACX,SAAS;UAAA0C,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACrCpC,OAAA,CAACV,KAAK;UACJ+C,WAAW,EAAC,kCAAkC;UAC9CC,KAAK,EAAEnC,UAAW;UAClBoC,QAAQ,EAAGC,CAAC,IAAKpC,aAAa,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eACdpC,OAAA,CAACZ,WAAW;QAAA2C,QAAA,gBACV/B,OAAA,CAACX,SAAS;UAAA0C,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACvCpC,OAAA,CAACP,MAAM;UAAC6C,KAAK,EAAEjC,QAAS;UAACkC,QAAQ,EAAGC,CAAC,IAAKlC,WAAW,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBACpE/B,OAAA;YAAQsC,KAAK,EAAC,QAAQ;YAAAP,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCpC,OAAA;YAAQsC,KAAK,EAAC,YAAY;YAAAP,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9CpC,OAAA;YAAQsC,KAAK,EAAC,MAAM;YAAAP,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClCpC,OAAA;YAAQsC,KAAK,EAAC,IAAI;YAAAP,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9BpC,OAAA;YAAQsC,KAAK,EAAC,MAAM;YAAAP,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClCpC,OAAA;YAAQsC,KAAK,EAAC,KAAK;YAAAP,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACdpC,OAAA,CAACH,GAAG;QAAC6C,CAAC,EAAC,MAAM;QAAAX,QAAA,gBACX/B,OAAA,CAACJ,IAAI;UAAC+C,EAAE,EAAE,CAAE;UAACC,UAAU,EAAC,QAAQ;UAAAb,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDpC,OAAA,CAACR,MAAM;UAACqD,KAAK,EAAC,OAAO;UAACb,OAAO,EAAE,CAAE;UAAAD,QAAA,gBAC/B/B,OAAA,CAACN,QAAQ;YACPoD,SAAS,EAAEvC,WAAY;YACvBgC,QAAQ,EAAGC,CAAC,IAAKhC,cAAc,CAACgC,CAAC,CAACC,MAAM,CAACM,OAAO,CAAE;YAAAhB,QAAA,EACnD;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACXpC,OAAA,CAACN,QAAQ;YACPoD,SAAS,EAAErC,mBAAoB;YAC/B8B,QAAQ,EAAGC,CAAC,IAAK9B,sBAAsB,CAAC8B,CAAC,CAACC,MAAM,CAACM,OAAO,CAAE;YAAAhB,QAAA,EAC3D;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNpC,OAAA,CAACT,MAAM;QACLyD,WAAW,EAAC,MAAM;QAClBC,OAAO,EAAEnC,UAAW;QACpBoC,SAAS,EAAEvC,UAAW;QACtBwC,WAAW,EAAC,UAAU;QACtBT,CAAC,EAAC,MAAM;QAAAX,QAAA,EACT;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB,CAAC;AAAClC,EAAA,CAvGID,iBAA2B;EAAA,QAMjBN,QAAQ;AAAA;AAAAyD,EAAA,GANlBnD,iBAA2B;AAyGjC,eAAeA,iBAAiB;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}