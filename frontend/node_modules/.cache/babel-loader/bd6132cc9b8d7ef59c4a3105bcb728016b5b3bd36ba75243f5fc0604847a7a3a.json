{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/VAPT/frontend/src/components/scanners/WebScanner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Input, Button, VStack, Text, useToast } from '@chakra-ui/react';\nimport { startWebScan } from '../../api/scanners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebScanner = () => {\n  _s();\n  const [targetUrl, setTargetUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const handleScan = async () => {\n    if (!targetUrl) {\n      toast({\n        title: 'Error',\n        description: 'Please enter a target URL',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      const result = await startWebScan(targetUrl);\n      toast({\n        title: 'Success',\n        description: `Scan started: ${result.message}`,\n        status: 'success',\n        duration: 5000,\n        isClosable: true\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to start scan',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        children: \"Web Vulnerability Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Scan web applications for security vulnerabilities using AI-powered detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"https://example.com\",\n        value: targetUrl,\n        onChange: e => setTargetUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: handleScan,\n        isLoading: loading,\n        children: \"Start Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(WebScanner, \"sNcf2wtowE+vvy6qAvi7ZmKskrc=\", false, function () {\n  return [useToast];\n});\n_c = WebScanner;\nexport default WebScanner;\nvar _c;\n$RefreshReg$(_c, \"WebScanner\");","map":{"version":3,"names":["React","useState","Box","Input","Button","VStack","Text","useToast","startWebScan","jsxDEV","_jsxDEV","WebScanner","_s","targetUrl","setTargetUrl","loading","setLoading","toast","handleScan","title","description","status","duration","isClosable","result","message","error","p","children","spacing","align","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","colorScheme","onClick","isLoading","_c","$RefreshReg$"],"sources":["/home/ubuntu/VAPT/frontend/src/components/scanners/WebScanner.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Input,\n  Button,\n  VStack,\n  Text,\n  useToast,\n} from '@chakra-ui/react';\nimport { startWebScan } from '../../api/scanners';\n\nconst WebScanner: React.FC = () => {\n  const [targetUrl, setTargetUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const handleScan = async () => {\n    if (!targetUrl) {\n      toast({\n        title: 'Error',\n        description: 'Please enter a target URL',\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const result = await startWebScan(targetUrl);\n      toast({\n        title: 'Success',\n        description: `Scan started: ${result.message}`,\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to start scan',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box p={4}>\n      <VStack spacing={4} align=\"stretch\">\n        <Text fontSize=\"xl\">Web Vulnerability Scanner</Text>\n        <Text>Scan web applications for security vulnerabilities using AI-powered detection</Text>\n        <Input\n          placeholder=\"https://example.com\"\n          value={targetUrl}\n          onChange={(e) => setTargetUrl(e.target.value)}\n        />\n        <Button\n          colorScheme=\"blue\"\n          onClick={handleScan}\n          isLoading={loading}\n        >\n          Start Scan\n        </Button>\n      </VStack>\n    </Box>\n  );\n};\n\nexport default WebScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}