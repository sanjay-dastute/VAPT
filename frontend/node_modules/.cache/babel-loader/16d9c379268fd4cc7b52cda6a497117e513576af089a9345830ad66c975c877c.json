{"ast":null,"code":"import React,{useState}from'react';import{FormControl,FormLabel,Input,Button,VStack,Select,useToast}from'@chakra-ui/react';import ScannerLayout from'../common/ScannerLayout';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const APIScanner=()=>{const[target,setTarget]=useState('');const[method,setMethod]=useState('GET');const[isScanning,setIsScanning]=useState(false);const toast=useToast();const handleScan=async()=>{if(!target){toast({title:'Error',description:'Please enter an API endpoint',status:'error',duration:3000});return;}setIsScanning(true);try{const response=await fetch('http://localhost:8000/scan/api',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({target,method})});if(!response.ok)throw new Error('Scan failed');toast({title:'Success',description:'API scan started successfully',status:'success',duration:3000});}catch(error){toast({title:'Error',description:'Failed to start API scan',status:'error',duration:3000});}setIsScanning(false);};return/*#__PURE__*/_jsx(ScannerLayout,{title:\"API Security Scanner\",description:\"Scan REST APIs for security vulnerabilities and misconfigurations\",children:/*#__PURE__*/_jsxs(VStack,{spacing:6,children:[/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(FormLabel,{children:\"API Endpoint\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"https://api.example.com/v1\",value:target,onChange:e=>setTarget(e.target.value)})]}),/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(FormLabel,{children:\"HTTP Method\"}),/*#__PURE__*/_jsxs(Select,{value:method,onChange:e=>setMethod(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"GET\",children:\"GET\"}),/*#__PURE__*/_jsx(\"option\",{value:\"POST\",children:\"POST\"}),/*#__PURE__*/_jsx(\"option\",{value:\"PUT\",children:\"PUT\"}),/*#__PURE__*/_jsx(\"option\",{value:\"DELETE\",children:\"DELETE\"})]})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleScan,isLoading:isScanning,loadingText:\"Scanning\",w:\"100%\",children:\"Start API Scan\"})]})});};export default APIScanner;","map":{"version":3,"names":["React","useState","FormControl","FormLabel","Input","Button","VStack","Select","useToast","ScannerLayout","jsx","_jsx","jsxs","_jsxs","APIScanner","target","setTarget","method","setMethod","isScanning","setIsScanning","toast","handleScan","title","description","status","duration","response","fetch","headers","body","JSON","stringify","ok","Error","error","children","spacing","placeholder","value","onChange","e","colorScheme","onClick","isLoading","loadingText","w"],"sources":["/home/ubuntu/VAPT/frontend/src/components/scanners/APIScanner.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  VStack,\n  Select,\n  useToast,\n} from '@chakra-ui/react';\nimport ScannerLayout from '../common/ScannerLayout';\n\nconst APIScanner: React.FC = () => {\n  const [target, setTarget] = useState('');\n  const [method, setMethod] = useState('GET');\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n\n  const handleScan = async () => {\n    if (!target) {\n      toast({\n        title: 'Error',\n        description: 'Please enter an API endpoint',\n        status: 'error',\n        duration: 3000,\n      });\n      return;\n    }\n\n    setIsScanning(true);\n    try {\n      const response = await fetch('http://localhost:8000/scan/api', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ target, method }),\n      });\n      if (!response.ok) throw new Error('Scan failed');\n      toast({\n        title: 'Success',\n        description: 'API scan started successfully',\n        status: 'success',\n        duration: 3000,\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to start API scan',\n        status: 'error',\n        duration: 3000,\n      });\n    }\n    setIsScanning(false);\n  };\n\n  return (\n    <ScannerLayout\n      title=\"API Security Scanner\"\n      description=\"Scan REST APIs for security vulnerabilities and misconfigurations\"\n    >\n      <VStack spacing={6}>\n        <FormControl>\n          <FormLabel>API Endpoint</FormLabel>\n          <Input\n            placeholder=\"https://api.example.com/v1\"\n            value={target}\n            onChange={(e) => setTarget(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel>HTTP Method</FormLabel>\n          <Select value={method} onChange={(e) => setMethod(e.target.value)}>\n            <option value=\"GET\">GET</option>\n            <option value=\"POST\">POST</option>\n            <option value=\"PUT\">PUT</option>\n            <option value=\"DELETE\">DELETE</option>\n          </Select>\n        </FormControl>\n        <Button\n          colorScheme=\"blue\"\n          onClick={handleScan}\n          isLoading={isScanning}\n          loadingText=\"Scanning\"\n          w=\"100%\"\n        >\n          Start API Scan\n        </Button>\n      </VStack>\n    </ScannerLayout>\n  );\n};\n\nexport default APIScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}